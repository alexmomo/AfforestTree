<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xsi:schemaLocation="     
           http://www.springframework.org/schema/beans     
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd     
           http://www.springframework.org/schema/context     
           http://www.springframework.org/schema/context/spring-context-3.2.xsd    
           http://www.springframework.org/schema/mvc     
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">  
     <!-- ===========================================mvc 注解========================================================= -->        
    <!--  默认的注解映射的支持,,主要作用于@Controller,激活该模式  
        下面是一种简写形式,完全可以手动配置替代这种简写形式；  
         它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,  
           是spring MVC为@Controllers分发请求所必须的   
    <mvc:annotation-driven/>   -->
    
    <!-- 自动扫描的包名,意即在base-package下尋找有@Component和@Configuration的target Class -->  
    <context:component-scan base-package="org.spring.*.controller"/> 
    <context:component-scan base-package="com.afforesttree.controller.*"/>
    <context:component-scan base-package="com.afforesttree.controller.*.*"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
    <bean id="urlMapper" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>
    <mvc:interceptors>
    	<mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.afforesttree.framework.token.TokenHandlerInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.afforesttree.framework.token.TokenValidInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
        <property name="webBindingInitializer">
            <bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
            </bean>
        </property>
        <property name="messageConverters">
            <list> 
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />  
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />  
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />  
                <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />  
                <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />  
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <mvc:resources location="/js/**" mapping="/js/"/>  
    <mvc:resources location="/css/**" mapping="/css/"/>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 200KB-->  
        <property name="maxUploadSize" value="2000000"/>  
    </bean>  
    <import resource="classpath:conf/springmvc-freemarker.xml" />
</beans>